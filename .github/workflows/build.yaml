name: Build

on:
  push:
    branches:
      - feature/github-actions

jobs:
  build-windows:
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.PULL_TOKEN }}
      - name: Fetch full history for Shijima submodules
        env:
          PULL_TOKEN: ${{ secrets.PULL_TOKEN }}
        run: |
          pushd libshijima
          git remote set-url origin "https://${PULL_TOKEN}@github.com/pixelomer/libshijima.git"
          git fetch --unshallow origin main
          git remote set-url origin "git@github.com:pixelomer/libshijima"
          echo "libshijima: $(git rev-list HEAD --count) commits"
          popd
      - name: Cache Docker image
        id: cache-docker
        uses: actions/cache@v4
        with:
          path: shijima-qt-dev.tar.gz
          key: docker-fedora-41-qt6-mingw
      - name: Build Docker image
        if: steps.cache-docker.outputs.cache-hit != 'true'
        run: |
          pushd dev-docker
          docker build -t shijima-qt-dev .
          docker save shijima-qt-dev | gzip > ../shijima-qt-dev.tar.gz
          popd
      - name: Import Docker image
        if: steps.cache-docker.outputs.cache-hit == 'true'
        run: |
          gunzip -c < shijima-qt-dev.tar.gz | docker load
      - name: Build Windows x86_64 debug build
        run: |
          docker run -e CONFIG=debug --rm -v "$(pwd)":/work shijima-qt-dev bash -c \
            'mingw64-make clean && mingw64-make -j$(nproc)'
      - name: Archive Windows x86_64 debug build
        uses: actions/upload-artifact@v4
        with:
          name: debug-windows-x86_64
          path: publish/Windows/debug/shijima-qt.exe
          retention-days: 1
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - run: exit 1
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.PULL_TOKEN }}
      - name: Fetch full history for Shijima submodules
        env:
          PULL_TOKEN: ${{ secrets.PULL_TOKEN }}
        run: |
          pushd libshijima
          git remote set-url origin "https://${PULL_TOKEN}@github.com/pixelomer/libshijima.git"
          git fetch --unshallow origin main
          git remote set-url origin "git@github.com:pixelomer/libshijima"
          echo "libshijima: $(git rev-list HEAD --count) commits"
          popd
      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.7.3'
          host: 'linux'
          target: 'desktop'
          arch: 'linux_gcc_64'
          modules: 'qtmultimedia'
          cache: true
      - name: Build Linux x86_64 debug build
        env:
          CONFIG: debug
        run: |
          make clean
          make -j$(nproc)
      - name: Archive Linux x86_64 debug build
        uses: actions/upload-artifact@v4
        with:
          name: debug-linux-x86_64
          path: publish/Linux/debug/shijima-qt
          retention-days: 1
  build-macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.PULL_TOKEN }}
      - name: Fetch full history for Shijima submodules
        env:
          PULL_TOKEN: ${{ secrets.PULL_TOKEN }}
        run: |
          pushd libshijima
          git remote set-url origin "https://${PULL_TOKEN}@github.com/pixelomer/libshijima.git"
          git fetch --unshallow origin main
          git remote set-url origin "git@github.com:pixelomer/libshijima"
          echo "libshijima: $(git rev-list HEAD --count) commits"
          popd
      - name: Temporarily let gtar run as root
        run: |
          sudo chown 0:0 /opt/homebrew/bin/gtar || true
          sudo chmod u+s /opt/homebrew/bin/gtar || true
      - name: Cache Qt6
        id: cache-qt6
        uses: actions/cache@v4
        with:
          path: /opt/local
          key: macos-13-macports-qt6
      - name: Revoke gtar's root permissions
        run: |
          sudo chmod u-s /opt/homebrew/bin/gtar || true
      - name: Install Qt6
        if: steps.cache-qt6.outputs.cache-hit != 'true'
        run: |
          wget --no-verbose https://github.com/macports/macports-base/releases/download/v2.10.5/MacPorts-2.10.5-13-Ventura.pkg
          sudo installer -pkg MacPorts-2.10.5-13-Ventura.pkg -target /
          export PATH=/opt/local/bin:/opt/local/sbin:$PATH
          yes | sudo port install qt6-qtbase qt6-qtmultimedia
          sudo rm -rf /opt/local/var/macports/build/*
          sudo rm -rf /opt/local/var/macports/distfiles/*
      - name: Build macOS x86_64 debug build
        env:
          CONFIG: debug
        run: |
          make clean
          make -j8
      - name: Archive macOS x86_64 debug build
        uses: actions/upload-artifact@v4
        with:
          name: debug-macos-x86_64
          path: publish/macOS/debug
          retention-days: 1
      - name: Temporarily let gtar run as root
        run: |
          sudo chown 0:0 /opt/homebrew/bin/gtar || true
          sudo chmod u+s /opt/homebrew/bin/gtar || true
